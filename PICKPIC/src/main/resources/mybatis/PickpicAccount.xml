<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace속성:매퍼파일의 완전한경로 .xml는 생략 -->
<!-- ※ibatis와는 다르게 id값에 .(dot)를 사용 못한다. -->

<mapper namespace="mybatis.PickpicAccount">
	<!-- 로그인 -->
	<select id="PickpicAccountIsMember" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) FROM pickpic_account WHERE ppa_email=#{ppa_email} AND ppa_password=#{ppa_password}
	</select>
	
	<!-- 이메일 중복체크 -->
	<select id="PickpicAccountIsEmail" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) FROM pickpic_account WHERE ppa_email=#{ppa_email} 
	</select>
	
	<!-- 계정 인증 확인 -->
	<select id="AuthSecurityIsAble" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) FROM auth_security WHERE as_enabled_flag=1 AND ppa_id=(SELECT ppa_id FROM pickpic_account WHERE ppa_email = #{ppa_email} AND ppa_type = #{ppa_type})
	</select>
	
	<!-- 계정정보 반환 -->
	<select id="PickpicAccountUser" parameterType="java.util.Map" resultType="PickpicAccountDTO">
		SELECT * FROM pickpic_account WHERE ppa_email = #{ppa_email} AND ppa_type = #{ppa_type}
	</select>
	
	<!-- 계성 생성  -->
	<insert id="PickpicAccountInsert" parameterType="java.util.Map">
		INSERT INTO pickpic_account(ppa_id, ppa_email, ppa_password, ppa_nickname, ppa_index) 
		VALUES(func_generator, #{ppa_email},#{ppa_password},#{ppa_nickname}, seq_ppa_index.NEXTVAL)
	</insert>

	<!-- 초기 계정정보 인증 테이블에 등록 -->
	<insert id="AuthSecurityInsert" parameterType="java.util.Map">
		INSERT INTO auth_security(as_id, as_index, ppa_id, as_key)
		VALUES(func_generator, seq_ppa_index.NEXTVAL, (SELECT ppa_id FROM pickpic_account WHERE ppa_email = #{ppa_email} AND ppa_type = #{ppa_type}), #{as_key})
	</insert>
	
	<!-- 인증 성공시 인증 완료상태로 전환 -->
	<update id="AuthSecurityUpdate" parameterType="java.util.Map">
		UPDATE auth_security SET as_enabled_flag=#{as_enabled_flag} WHERE as_key=#{as_key} AND ppa_id=(SELECT ppa_id FROM pickpic_account WHERE ppa_email=#{ppa_email} AND ppa_type=#{ppa_type})
	</update>
	
	<!-- 로그인 기록 등록 -->
	<insert id="LoginHistoryInsert" parameterType="java.util.Map">
		INSERT INTO login_history(lh_id, lh_index, ppa_id) 
		VALUES(func_generator, seq_lh_index.NEXTVAL, (SELECT ppa_id FROM pickpic_account WHERE ppa_email = #{ppa_email} AND ppa_type = #{ppa_type}))
	</insert>
</mapper>
