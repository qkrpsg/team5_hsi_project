<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<mvc:annotation-driven/>
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- <annotation-driven /> -->
	<mvc:default-servlet-handler/>
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- <resources mapping="/resources/**" location="/resources/" /> -->
	
	<!-- tiles사용을 위한 bean등록-->
	<bean  class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
			<property name="definitions">
				<list>
					<value>/WEB-INF/template/layouts.xml</value>
				</list>
			</property>	
	</bean>
	<!-- tiles를 처리하도록 또 다른 뷰리졸버 등록 -->
	<bean  class="org.springframework.web.servlet.view.UrlBasedViewResolver">
			<property name="order" value="0"/>  <!-- .jsp도 view로 사용하기 위해 우선순위를 가장먼저--> 			
			<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
			
	</bean>
	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	
	
	
	<!-- 사용자 요청을 처리할 빈 등록
	<bean class="com.kosmo.pickpic.service.web.UserController"/>
	-->
	<!-- 위 컨트롤러에 내가 만든 Validator를 주입하기 위한 빈 등록 -->
 	<!-- 
 	실제 유효성 검증을 하는 빈 객체:Validator
 	 -->
	<bean id="validator" class="com.kosmo.pickpic.service.impl.FormValidator"/>
	<!-- 유효성 검증을 위한 스프링에서 제공하는 빈 등록(에러메시지 출력하기위함) -->
	<!-- id값은 내부적으로 프렘임워크가 
         messageSource으로 
               사용함으로
               반드시 id에 messageSource값으로 설정
 	-->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		
 	 
		<!-- 
 		 src 밑이나 WEB-INF 밑에 에러메시지를 저장한 
		 properties파일명(확장자를 생략한) 
		 키값=에러메시지
		 키값은   에러코드.커맨드객체명.속성 = 에러 내용    단,커맨드 객체명은 소문자로
		 에러코드는 rejectValue("속성","에러코드")에 설정한  에러코드값
		 예]nameError.formCommand.name
		 -->
		<property name="basenames">
			<list>			
				<!-- <value>controller/validation/ErrorMessage</value> -->
				
				<!-- <value>classpath:validator/ErrorMessage</value> -->
				<value>/WEB-INF/classes/validator/ErrorMessage</value>
				<value>/WEB-INF/classes/validator/ErrorMessage.properties</value>
				<value>classpath:validator/ErrorMessage.properties</value>	
				<value>classpath:validator/ErrorMessage</value>
				<!-- <value>/WEB-INF/spring/ErrorMessage.properties</value> -->
				<!-- <value>classpath:com/kosmo/pickpic/service/web/ErrorMessage</value> -->
			</list>		
		</property>  
	</bean>
	
	 <!-- 리소스파일(.properties) 사용을 위한 설정 --> 
	 <context:property-placeholder location="classpath:validator/ErrorMessage.properties"/>
	
	
	
	<context:component-scan base-package="com.kosmo.pickpic" />
	
	
	
</beans>
